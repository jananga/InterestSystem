/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wdg.interestsystem.view;

import com.wdg.interestsystem.controller.CustomerDAO;
import com.wdg.interestsystem.controller.CustomerDAOImp;
import com.wdg.interestsystem.model.Customer;
import java.awt.Font;
import java.util.List;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

/**
 *
 * @author acer
 */
public class CustomerRegistration extends javax.swing.JPanel {

    /**
     * Creates new form CustomerRegistration
     */
    public CustomerRegistration() {
        initComponents();
        txtCusId.setVisible(false);
        customerTable.setSelectionModel(new ForcedListSelectionModel());
        customerTable.setRowHeight(24);
        customerTable.setFont(new Font("Dialog", Font.BOLD, 16));

        JTableHeader header = customerTable.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 18));
        //customerTable.setFont(new Font("Serif", Font.BOLD, 20));

        loadList();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtTelOne = new javax.swing.JTextField();
        txtTelTwo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        txtCusId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(230, 210, 193));
        setBorder(javax.swing.BorderFactory.createCompoundBorder());
        setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Name :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Tel. No.1 :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Tel. No.2 :");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtTelOne.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtTelTwo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(214, 209, 205));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdate.setText("Edit");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd.setText("Insert");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        customerTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        customerTable.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Cus ID", "Name", "Tel No 1", "Tel No 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.setColumnSelectionAllowed(true);
        customerTable.getTableHeader().setReorderingAllowed(false);
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customerTableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);
        customerTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (customerTable.getColumnModel().getColumnCount() > 0) {
            customerTable.getColumnModel().getColumn(0).setMinWidth(30);
            customerTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            customerTable.getColumnModel().getColumn(0).setMaxWidth(30);
            customerTable.getColumnModel().getColumn(1).setMinWidth(50);
            customerTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            customerTable.getColumnModel().getColumn(1).setMaxWidth(150);
            customerTable.getColumnModel().getColumn(2).setMinWidth(100);
            customerTable.getColumnModel().getColumn(2).setPreferredWidth(500);
            customerTable.getColumnModel().getColumn(2).setMaxWidth(500);
            customerTable.getColumnModel().getColumn(3).setMinWidth(100);
            customerTable.getColumnModel().getColumn(3).setPreferredWidth(200);
            customerTable.getColumnModel().getColumn(3).setMaxWidth(200);
            customerTable.getColumnModel().getColumn(4).setMinWidth(100);
            customerTable.getColumnModel().getColumn(4).setPreferredWidth(200);
            customerTable.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Customer Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtTelOne, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(txtCusId, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtTelTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelOne, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtCusId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(35, 35, 35)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        //Deleting an exixting record
         boolean res = deleteCustomer();
        if (res) {
            clear();
            loadList();

            JOptionPane.showMessageDialog(null, "Record Deleted successfully.");

        } else {
            // JOptionPane.showMessageDialog(null, "Record insertion fail..");

        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        boolean res = addCustomer();
        if (res) {
            clear();
            loadList();

            JOptionPane.showMessageDialog(null, "Record inserted successfully.");

        } else {
            // JOptionPane.showMessageDialog(null, "Record insertion fail..");

        }

    }//GEN-LAST:event_btnAddActionPerformed
    

    
    
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed

        //clear text fields
        clear();

    }//GEN-LAST:event_btnClearActionPerformed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked

        //Call fill text boxes to on mouse click table
        fillTextBox();
    }//GEN-LAST:event_customerTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        boolean res = editCustomer();
        if (res) {
            clear();
            loadList();

            JOptionPane.showMessageDialog(null, "Record Updated successfully.");

        } else {
            // JOptionPane.showMessageDialog(null, "Record insertion fail..");

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void customerTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseEntered
        //Call fill text boxes to on mouse click table
        //fillTextBox();
    }//GEN-LAST:event_customerTableMouseEntered

    public void fillTextBox() {
        // Get selected Row Value
        //JOptionPane.showMessageDialog(null, "Calles");
        int index = customerTable.getSelectedRow();

        TableModel tbModel = customerTable.getModel();

        int cusID = (int) tbModel.getValueAt(index, 1);
        String cusName = tbModel.getValueAt(index, 2).toString();
        //JOptionPane.showMessageDialog(null, "Selected Row cus name: "+cusName);

        String telNo1 = tbModel.getValueAt(index, 3).toString();
        String telNo2 = tbModel.getValueAt(index, 4).toString();

        //Set values to text Boxes
        txtCusId.setText(String.valueOf(cusID));
        txtName.setText(cusName);
        txtTelOne.setText(telNo1);
        txtTelTwo.setText(telNo2);

    }

    public void clear() {
        txtName.setText("");
        txtTelOne.setText("");
        txtTelTwo.setText("");
        txtCusId.setText("");

    }

    public boolean addCustomer() {

        boolean res = false;

        boolean valid = validateFields();

        if (valid) {

            String name = txtName.getText();
            String telNoOne = txtTelOne.getText().trim();
            String telNoTwo = txtTelTwo.getText().trim();

            Customer customer = new Customer();
            customer.setName(name);
            customer.setTelNoOne(telNoOne);
            customer.setTelNoTwo(telNoTwo);

            CustomerDAO customerInsert = new CustomerDAOImp();
            res = customerInsert.insertCustomer(customer);

            // JOptionPane.showMessageDialog(null, "ok");
        }

        return res;

    }

    public boolean editCustomer() {

        boolean res = false;
        int cusid = 0;

        if (txtCusId.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Select Customer to Update.");

        } else {
            cusid = Integer.parseInt(txtCusId.getText());

        }

        boolean valid = validateFields();

        if (valid) {

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Update the record ?", "Warning", dialogButton);

            if (dialogResult == JOptionPane.YES_OPTION) {

                String name = txtName.getText();
                String telNoOne = txtTelOne.getText().trim();
                String telNoTwo = txtTelTwo.getText().trim();

                Customer customer = new Customer();
                customer.setId(cusid);
                customer.setName(name);
                customer.setTelNoOne(telNoOne);
                customer.setTelNoTwo(telNoTwo);

                CustomerDAO customerInsert = new CustomerDAOImp();
                res = customerInsert.updateCustomer(customer);
            }
            // JOptionPane.showMessageDialog(null, "ok");
        }

        return res;

    }
    
    
    public boolean deleteCustomer() {

        boolean res = false;
        int cusid = 0;

        if (txtCusId.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Select Customer to Delete.");

        } else {
            
            
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Delete the record ?", "Warning", dialogButton);

            if (dialogResult == JOptionPane.YES_OPTION) {
            cusid = Integer.parseInt(txtCusId.getText());
            
            CustomerDAO customerInsert = new CustomerDAOImp();
            res = customerInsert.deleteCustomer(cusid);
            }
        }
        
        return res;
    }

    public boolean validateFields() {

        String name = txtName.getText();
        String telNoOne = txtTelOne.getText();
        String telNoTwo = txtTelTwo.getText();

        boolean ret = false;

        String regexStr = "^[0-9]{10}$";

        if (name.trim().equals("") || name.matches(".*\\d+.*")) {
            JOptionPane.showMessageDialog(null, "Enter valid name.");
            txtName.requestFocus();

        } else if ((!telNoOne.matches(regexStr)) && (!telNoOne.trim().equals(""))) {

            JOptionPane.showMessageDialog(null, "Enter valid Tel No 1.");
            txtTelOne.requestFocus();

        } else if ((!telNoTwo.matches(regexStr)) && (!telNoTwo.trim().equals(""))) {
            JOptionPane.showMessageDialog(null, "Enter valid Tel No 2.");
            txtTelTwo.requestFocus();

        } else {
            ret = true;
        }

        return ret;
    }

    public void loadList() {

        CustomerDAO customerList = new CustomerDAOImp();

        List<Customer> list = customerList.listAll();

        DefaultTableModel dtm = (DefaultTableModel) customerTable.getModel();

        dtm.setRowCount(0);
        int i = 1;
        for (Customer customer : list) {
            
            Object[] obj = {i++, customer.getId(), customer.toString(), customer.getTelNoOne(), customer.getTelNoTwo()};
            dtm.addRow(obj);
        }

    }
    

    public class ForcedListSelectionModel extends DefaultListSelectionModel {

        public ForcedListSelectionModel() {
            setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        }

        @Override
        public void clearSelection() {
        }

        @Override
        public void removeSelectionInterval(int index0, int index1) {
        }

    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCusId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTelOne;
    private javax.swing.JTextField txtTelTwo;
    // End of variables declaration//GEN-END:variables
}
